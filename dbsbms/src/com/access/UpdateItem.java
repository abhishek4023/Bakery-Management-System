/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.access;

import com.dbutil.CrudOperation;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ABHISHEK MAURYA
 */
public class UpdateItem extends javax.swing.JFrame {

    Connection con=null;
    PreparedStatement pscombo,psupdate,ps=null;
    private ResultSet rscombo,rs=null;
    String pid=null;
    
    /**
     * Creates new form UpdateItem
     */
    public UpdateItem() {
        initComponents();
        
        con=CrudOperation.createConnection();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        fillCombo();
    }

    public void fillCombo()
    {
        String strsql="select pid from products";
        
        try{
            
            pscombo=con.prepareStatement(strsql);
            rscombo=pscombo.executeQuery();
            
            while(rscombo.next())
            {
                String data =rscombo.getString("pid");
                cmb.addItem(data);
            }           
        }
        
        catch(SQLException se)
        {
            System.out.println(se);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmb = new javax.swing.JComboBox();
        txtpname = new javax.swing.JTextField();
        lblcid = new javax.swing.JLabel();
        txtqtn = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Item");

        jLabel1.setText("Product ID");

        jLabel2.setText("Category ID");

        jLabel3.setText("Product Name");

        jLabel4.setText("Quantity");

        jLabel5.setText("Price");

        cmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Product ID" }));
        cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActionPerformed(evt);
            }
        });

        txtqtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtqtnFocusLost(evt);
            }
        });

        txtprice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpriceFocusLost(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb, 0, 122, Short.MAX_VALUE)
                            .addComponent(txtpname)
                            .addComponent(lblcid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtqtn)
                            .addComponent(txtprice)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtqtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActionPerformed
        // TODO add your handling code here:
        
        pid=(String)cmb.getSelectedItem();
        String strsql="select * from products where pid=?";
       
        try{
            
            ps=con.prepareStatement(strsql);
            ps.setString(1, pid);
            rs=ps.executeQuery();
            rs.next();
            String cid=rs.getString("cid");
            String name=rs.getString("name");
            String quantity=rs.getString("quantity");
            String price=rs.getString("price");
          
            txtpname.setText(name);
            txtprice.setText(price);
            txtqtn.setText(quantity);
            lblcid.setText(cid);
           
            
          
            
        }
        catch(SQLException se)
        {
            System.out.println(se);
        }
    }//GEN-LAST:event_cmbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         
         String pid=(String)cmb.getSelectedItem();
         String name=txtpname.getText();
         String quantity=txtqtn.getText();
         String price=txtprice.getText();
        
        
       
        if(checkEmpty(name,quantity,price,pid))
        {
            JOptionPane.showMessageDialog (this, "You have left one or more Fields BLANK", "ALERT!!!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        else
        {
        String strupdate="update products set name=? , quantity=? , price=? where pid=?";
      
        try{
            
            psupdate=con.prepareStatement(strupdate);
            psupdate.setString(1, name);
            psupdate.setString(2, quantity);
            psupdate.setString(3, price);
            psupdate.setString(4, pid);
            int rw=psupdate.executeUpdate();
            
          
            
            if(rw>0)
            {
                JOptionPane.showMessageDialog(this, "Your Details are Updated");
            }
            
        }
        catch(SQLException se)
        {
            System.out.println(se);
        }
    }      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtqtnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtqtnFocusLost
        // TODO add your handling code here:
        String ph=txtqtn.getText();
        char[]ch=ph.toCharArray();
        int j=0;
               
        for(int i=0; i<ph.length(); i++)
        {
            if(ch[i]<48 || ch[i]>57)
            {
                j++;
            }
        }
        
        if(j!=0)
        {
                   JOptionPane.showMessageDialog(this, "Only Numerical Values should be Entered");

        }
    }//GEN-LAST:event_txtqtnFocusLost

    private void txtpriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpriceFocusLost
        // TODO add your handling code here:
        String ph=txtprice.getText();
        char[]ch=ph.toCharArray();
        int j=0;
               
        for(int i=0; i<ph.length(); i++)
        {
            if(ch[i]<48 || ch[i]>57)
            {
                j++;
            }
        }
        
        if(j!=0)
        {
                   JOptionPane.showMessageDialog(this, "Only Numerical Values should be Entered");

        }
    }//GEN-LAST:event_txtpriceFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblcid;
    private javax.swing.JTextField txtpname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtqtn;
    // End of variables declaration//GEN-END:variables

    private boolean checkEmpty(String name, String quantity, String price, String pid) {
        
         if(name.isEmpty() || quantity.isEmpty() || price.isEmpty() || pid.equals("Select Product ID"))
        {
            return true;
        }
        else
        {
        return false;
        }
    }
}
